<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 开源软件 | 龍昌博客]]></title>
  <link href="http://www.xefan.com/categories/开源软件/atom.xml" rel="self"/>
  <link href="http://www.xefan.com/"/>
  <updated>2016-06-26T14:00:18+08:00</updated>
  <id>http://www.xefan.com/</id>
  <author>
    <name><![CDATA[龍昌]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[平铺式窗口管理器——awesome和i3]]></title>
    <link href="http://www.xefan.com/archives/84100.html"/>
    <updated>2014-04-23T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84100-平铺式窗口管理器——awesome和i3</id>
    <content type="html"><![CDATA[<p>最近折腾了一下平铺式的窗口管理器 awesome 和 i3。感觉这两个都很不错，现在进行一下简单的总结。  </p>


<h2>Awesome</h2>


<p>先说一下Awesome吧。安装过程很简单。<br>
对于ArchLinux的用户可以使用 pacman 直接进行安装：</p>


<pre><code>$ [sudo] pacman install awesome
</code></pre>


<p>对于LinuxDeepin的用户可以使用 apt-get 进行安装：</p>


<pre><code>$ [sudo] apt-get install awesome
</code></pre>


<h3>启动</h3>


<p>如果是使用登陆管理器，那么在登陆是选择 awesome 即可。  </p>


<p>如果没有使用登陆管理器，则在 ~/.xinitrc 脚本中添加 <em>exec awesome</em> 。</p>


<h3>常用快捷键</h3>


<p>awesome的快捷键是 $mod 加上其他键。在awesome中 $mod 默认为 Win(Mod4)键，可以通过修改配置文件将其改为其他按键。</p>


<ul>
<li>$mod + r : 运行命令</li>
<li>$mod + Enter : 打开一个新终端</li>
<li>$mod + Shift + c : 关闭当前窗口</li>
<li>$mod + m : 最大化当前窗口</li>
<li>$mod + Ctrl + r : 重新加载配置</li>
<li>$mod + Shift + q : 退出awesome</li>
<li></li>
<li>$mod + j : 切换到下一个窗口</li>
<li>$mod + k : 切换到前一个窗口</li>
<li>$mod + Left : 查看前一个桌面</li>
<li>$mod + Right : 查看后一个桌面</li>
<li>$mod + 1-9 : 切换到桌面 1-9</li>
<li>$mod + Shift + j : 当前窗口和前一个窗口互换位置</li>
<li>$mod + Shift + k : 当前窗口和后一个窗口互换位置</li>
<li>$mod + h : 把主区域(master width)的宽度增大5%</li>
<li>$mod + l : 把主区域(master width)的宽度减少5%</li>
<li></li>
<li>$mod + space : 把当前tag更换为下一种布局</li>
<li>$mod + Shift + space : 把当前tag更换为前一种布局</li>
<li>$mod + Ctrl + space : 切换当前窗口是否为浮动的</li>
<li>$mod + Shift + r : 重绘当前窗口</li>
<li>$mod + t : 标记窗口（可标记多个）</li>
<li>$mod + Shift + 1~9 : 把标记的窗口移动到第一~第九桌面上</li>
<li>$mod + Ctrl + 1~9 : 把当前桌面和1~9桌面同时显示</li>
<li>$mod + Esc : 快速切换到上一个桌面 </li>
</ul>


<h3>配置</h3>


<p>awesome 的配置文件是一个lua脚本，要想自己进行配置可能得稍微了解一下lua语言。</p>


<pre><code>$ mkdir -p ~/.config/awesome/
$ cp /etc/xdg/awesome/rc.lua ~/.config/awesome
</code></pre>


<h2>I3</h2>


<p>同样的i3也可以直接从软件源里进行安装。执行如下命令：</p>


<pre><code>$ [sudo] pacman install i3-wm i3lock i3status dmenu
</code></pre>


<p>或者：</p>


<pre><code>$ [sudo] apt-get install i3-wm i3lock i3status dmenu
</code></pre>


<p>启动方式与awesome类似。  </p>


<p>i3对应的配置文件为 ~/.i3/config ，状态栏的配置文件为 ~/.i3status.conf 。与awesome类似，i3的快捷键也是 $mod 加上其他键。</p>


<p>它的配置文件比较简单。由于不习惯它默认的按键，于是我就修改成了vim风格的按键。我的配置放在了 https://github.com/wusuopu/my-i3-config ，各位感兴趣的可以参考下。  </p>


<p>我设置的快捷键如下：</p>


<ul>
<li>$mod + Enter : 打开一个新终端</li>
<li>$mod + q : 关闭当前窗口</li>
<li>$mod + Shift + q : 退出i3</li>
<li>$mod + d : 运行dmenu</li>
<li>$mod + e : 运行pcmanfm文件管理器</li>
<li>$mod + c : 运行i3lock锁屏</li>
<li>$mod + h : 选中左边的窗口</li>
<li>$mod + j : 选中下边的窗口</li>
<li>$mod + k : 选中上边的窗口</li>
<li>$mod + l : 选中右边的窗口</li>
</ul>


<h2>总结</h2>


<p>两个都试用了几天，我个人的感受是awesome比较强大，配置文件就是一个lua有脚本，因此可以在配置文件里完成一些比较复杂的功能。但是同时lua脚本作为配置，修改起来比较复杂，需要会一点lua语言。<br>
相对而言i3就比较简洁了，同时功能也会少一些，不过我感觉也够用了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分享几款vim风格的浏览器]]></title>
    <link href="http://www.xefan.com/archives/83880.html"/>
    <updated>2013-08-24T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83880-分享几款vim风格的浏览器</id>
    <content type="html"><![CDATA[<p>作为一个了vim用户，希望所有的操作都能够以vim的按键方式完成，上网浏览网页也不例外。于是乎就找了几款vim按键绑定的浏览器。</p>

<p>0.Firefox + Vimperator / Chrome + Vimium<br/>
如果是用的Firefox或者Chrome浏览器的话直接安装相应的插件即可达到想要的效果。<br/>
Firefox的是Vimperator；Chrome的是Vimium。</p>

<p>但是感觉Firefox和Chrome有时又太占资源了，我想到一个轻量级的浏览器。</p>

<p>1.w3m<br/>
如果你是一个终端控的话，w3m貌似还不错。现在常见的Linux发行版的软件源中应该都包含了w3m，直接通过软件仓库安装就行了。<br/>
只不过w3m太简洁了，显示不了CSS样式，执行不了js代码，甚至是显示图片都比较麻烦。</p>

<p>2.uzbl<br/>
uzbl是一款基于GTK+Webkit的浏览器，只是它的按键与原生的vim相差比较大，我刚开始操作不太适应。<br/>
它的配置文件在$HOME/.config/uzbl目录下，如果把它配置好了的话那使用起来应该也会很不错的。<br/>
uzbl默认是不支持多标签的，如果要想打开多个标签请运行uzbl-tabbed程序。<br/>
下载地址：<a href="http://www.uzbl.org/">http://www.uzbl.org/</a></p>

<p>linuxdeepin用户可以执行命令 sudo apt-get install uzbl来安装。</p>

<p>3.dwb<br/>
dwb是一款基于gtk和webkit的轻量级的浏览器。它的按键与Firefox的Vimperator插件较为相似。<br/>
我个人觉得dwb是这几款浏览器中最为方便的，它配置比较简单，而且提供了一个web的配置页面。如图：<br/>
<img src="http://portix.bitbucket.org/dwb/resources/prefs.jpg" alt="" /></p>

<p>下载地址：<a href="http://portix.bitbucket.org/dwb/">http://portix.bitbucket.org/dwb/</a></p>

<p>4.luakit<br/>
luakit也是基于gtk和webkit的，只不过它是用lua语言开发的。它的配置文件也是lua脚本，如果想到修改配置的话可能需要懂点lua语言。<br/>
我感觉luakit的按键与vim最相近，而且它还提供了页面调试功能，这对做web开发的人来说比较方便。</p>

<p>下载地址：<a href="http://mason-larobina.github.io/luakit/">http://mason-larobina.github.io/luakit/</a></p>

<p>linuxdeepin用户可以执行命令 sudo apt-get install luakit来安装。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分享两个vim的git插件]]></title>
    <link href="http://www.xefan.com/archives/83877.html"/>
    <updated>2013-08-11T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83877-分享两个vim的git插件</id>
    <content type="html"><![CDATA[<p>1.vim-git</p>

<p>我只是简单体验发一下，个人觉得这个就是用vim的命令把git的命令包装了一下，还不如直接在终端下操作方便。</p>

<p>常用命令<br/>
:GitAdd<br/>
:GitCommit<br/>
:GitStatus<br/>
:GitLog<br/>
:GitCheckout<br/>
:GitDiff<br/>
:GitPull<br/>
:GitPush</p>

<p>快捷键<br/>
&lt;Leader&gt;gd 等同于 :GitDiff<br/>
&lt;Leader&gt;gD 等同于 :GitDiff —cached<br/>
&lt;Leader&gt;gs 等同于 :GitStatus<br/>
&lt;Leader&gt;gl 等同于 :GitLog<br/>
&lt;Leader&gt;ga 等同于 :GitAdd<br/>
&lt;Leader&gt;gA 等同于 :GitAdd &lt;cfile&gt;<br/>
&lt;Leader&gt;gc 等同于 :GitCommit</p>

<p>下载地址：<a href="https://github.com/motemen/git-vim.git">https://github.com/motemen/git-vim.git</a></p>

<p>2.vim-fugitive</p>

<p>感觉这个比较强大，尤其是配合vimdiff来查看文件的发动非常方便。
它的说明文档介绍到如果你的vim版本低于7.2，那么建议同时也把vim-git安装上。</p>

<p>下载地址：<a href="https://github.com/tpope/vim-fugitive.git">https://github.com/tpope/vim-fugitive.git</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在vim下使用DoxygenToolkit进行自动注释]]></title>
    <link href="http://www.xefan.com/archives/83795.html"/>
    <updated>2012-09-28T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83795-在vim下使用DoxygenToolkit进行自动注释</id>
    <content type="html"><![CDATA[<p>doxygen是一个文档生成器，其工作机制是利用注释中的有效信息来自动生成文档。而DoxygenToolkit是vim下一款能够自动生成doxygen可以识别的注释的插件。<br/>
它会根据配置自动生成注释，主要是license注释、文件注释、函数及类注释。<br/>
下载地址：<a href="http://www.vim.org/scripts/script.php?script_id=987">http://www.vim.org/scripts/script.php?script_id=987</a></p>

<p>修改.vimrc的配置，加入自己对Doxygen的配置<br/>
let g:DoxygenToolkit_authorName=&ldquo;longchangjin &lt;admin@longchangjin.cn&gt;&rdquo;<br/>
let g:DoxygenToolkit_briefTag_funcName=&ldquo;yes&rdquo;<br/>
let g:doxygen_enhanced_color=1</p>

<p>运行vim 在命令行输入命令即可<br/>
DoxAuthor:将文件名，作者，时间等<br/>
DoxLic:  license注释<br/>
Dox：    函数及类注释</p>

<p>也可做一个按键映射，就不用每次都输入命令了。</p>

<p>如果想自定义注释信息，可以修改DoxygenToolkit.vim文件。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM配对符号(surrouding)处理插件]]></title>
    <link href="http://www.xefan.com/archives/83793.html"/>
    <updated>2012-09-23T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83793-VIM配对符号(surrouding)处理插件</id>
    <content type="html"><![CDATA[<p>在写程序时有许多的配对符号如：(), [], {}, &ldquo;&rdquo;, &lsquo;&#8217;。vim-surround就是一款插件可以快速处理这些配对符号的。
下载地址：<a href="https://github.com/tpope/vim-surround">https://github.com/tpope/vim-surround</a></p>

<p>下载安装好后就可以使用了，下面是一个示例：</p>

<p>&ldquo;Hello world!&rdquo;  按下 cs&#8221;&lsquo; 后变为 &#8216;Hello world!&rsquo;<br/>
再按下 cs&#8217;&lt;q&gt;变为  &lt;q&gt;Hello world!&lt;/q&gt;<br/>
再按下 cst&#8221; 变为  &ldquo;Hello world!&rdquo;<br/>
再按下 ds&#8221; 则删除掉两端的引号，变为  Hello world!<br/>
现在将光标移到“&#8221;Hello&#8221;上，按下 ysiw] 变为 [Hello] world!</p>

<p>surround常用快捷键：<br/>
Normal mode<br/>
ds  - 删除配对符号<br/>
cs  - 修改配对符号<br/>
ys  - 增加配对符号<br/>
yss - 对该行增加配对符号</p>

<p>Visual mode<br/>
S   - 增加配对符号，并新增一行</p>

<p>Insert mode <br/>
&lt;CTRL-s&gt; - 增加配对<br/>
&lt;CTRL-s&gt;&lt;CTRL-s&gt; - 增加配对符号并新增一行<br/>
&lt;CTRL-g&gt;s - 同&lt;CTRL-s&gt;<br/>
&lt;CTRL-g&gt;S - 同&lt;CTRL-s&gt;&lt;CTRL-s&gt;</p>
]]></content>
  </entry>
  
</feed>
