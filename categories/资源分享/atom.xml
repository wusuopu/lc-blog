<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 资源分享 | 龍昌博客]]></title>
  <link href="http://www.xefan.com/categories/资源分享/atom.xml" rel="self"/>
  <link href="http://www.xefan.com/"/>
  <updated>2014-11-04T21:52:15+08:00</updated>
  <id>http://www.xefan.com/</id>
  <author>
    <name><![CDATA[龍昌]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[配置elixir的vim环境]]></title>
    <link href="http://www.xefan.com/archives/84132.html"/>
    <updated>2014-10-29T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84132-配置elixir的vim环境</id>
    <content type="html"><![CDATA[<p>elixir是建立在Erlang虚拟机之上的一种函数式编程语言。下面介绍elixir的两个vim插件。</p>


<p>首先是语法高亮支持： https://github.com/elixir-lang/vim-elixir</p>


<p>其次是snippets支持： https://github.com/carlosgaldino/elixir-snippets
这个需要先安装 snipMate 插件。</p>


<p>如果也是用的 vundle 进行插件管理的话，可以直接在 .vimrc 配置中添加如下内容即可：</p>


<pre><code>Bundle 'elixir-lang/vim-elixir'
Bundle 'carlosgaldino/elixir-snippets'

au BufNewFile,BufRead *.exs set ft=elixir
</code></pre>




<p>然后再在vim执行命令 :BundleInstall 即可。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[配置coffeescript的vim环境]]></title>
    <link href="http://www.xefan.com/archives/84130.html"/>
    <updated>2014-10-24T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84130-配置coffeescript的vim环境</id>
    <content type="html"><![CDATA[<p>coffeescript是构建在javascript基础上一门语言，它在运行时会编译在javascript。下面介绍vim用来开发coffeescript的两个插件。</p>


<p>首先是语法高亮支持： https://github.com/kchmck/vim-coffee-script</p>


<p>其次是snippets支持： https://github.com/carlosvillu/coffeScript-VIM-Snippets
这个需要先安装 snipMate 插件。</p>


<p>如果也是用的 vundle 进行插件管理的话，可以直接在 .vimrc 配置中添加如下内容即可：</p>


<pre><code>Bundle 'kchmck/vim-coffee-script'
Bundle 'carlosvillu/coffeScript-VIM-Snippets'

au BufNewFile,BufRead *.coffee set ft=coffee
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM编译参数]]></title>
    <link href="http://www.xefan.com/archives/84127.html"/>
    <updated>2014-10-18T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84127-VIM编译参数</id>
    <content type="html"><![CDATA[<p>每次重装系统之后都要重新编译一次VIM，为了方便就将编译参数记录如下：</p>


<pre><code>./configure --prefix=/opt/vim --enable-acl --enable-cscope --enable-largefile --enable-multibyte --enable-sniff --enable-mzschemeinterp --enable-xim --enable-tclinterp --enable-perlinterp --enable-python3interp --enable-pythonint
erp --enable-rubyinterp --enable-netbeans --enable-gui --enable-luainterp --enable-nls --enable-xsmp --enable-xsmp-interact --enable-fontset --with-features=huge --with-x
</code></pre>




<p>上面的参数中启用了对tcl、perl、python、ruby、lau的支持。同时为了使用系统的剪切板还启用了对X的支持。</p>


<p>我的VIM配置文件： https://github.com/wusuopu/my-vimrc</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim的symfony2开发环境配置]]></title>
    <link href="http://www.xefan.com/archives/84114.html"/>
    <updated>2014-06-26T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84114-vim的symfony2开发环境配置</id>
    <content type="html"><![CDATA[<h2>安装</h2>


<p>最近在用Symfony2框架进行开发，正所谓工欲善其事必先利其器。为了提高开发效率，因此将vim配置为symfony的IDE。</p>


<p>我安装的是phpcomplete-extended-symfony这款插件 https://github.com/m2mdas/phpcomplete-extended-symfony</p>


<p>它有些依赖在文档中没写清楚，我也是折腾了好久才搞定的，于是做个笔记记录一下。</p>


<p>我总共安装了以下插件：</p>


<ul>
<li>neocomplete.vim  </li>
<li>vimproc.vim  </li>
<li>unite.vim  </li>
<li>phpcomplete.vim  </li>
<li>phpcomplete-extended  </li>
<li>phpcomplete-extended-symfony  </li>
<li>vim-twig  </li>
</ul>


<p>我是使用的Vundle进行vim插件管理，因此在 .vimrc 配置中添加以下内容：</p>


<pre><code>Bundle 'Shougo/neocomplete.vim'
Bundle 'Shougo/vimproc.vim'
Bundle 'Shougo/unite.vim'
Bundle 'shawncplus/phpcomplete.vim'
Bundle 'm2mdas/phpcomplete-extended'
Bundle 'm2mdas/phpcomplete-extended-symfony'
Bundle 'evidens/vim-twig'
</code></pre>


<p>然后再执行BundleInstall命令进行下载安装。</p>


<p>注意：vim-twig插件不是必需的，安装它只是为了编写twig模板时能够高亮。  </p>


<h2>使用</h2>


<p>接下来说说使用流程。</p>


<p>1.vimproc需要编译<br>
进行vimproc的安装目录，执行make命令进行编译。详细内容请阅读它的README文件。</p>


<p>2.安装ctags工具<br>
由于当前的ctags工具不支持PHP的新特性，如命名空间、traits、interface，于是就需要给ctags打补丁。  </p>


<p>下载打过补丁的ctags源代码：  </p>


<pre><code>$ wget "https://github.com/shawncplus/phpcomplete.vim/blob/master/misc/ctags-better-php-parser.tar.bz2?raw=true" -O ctags-better-php-parser.tar.bz2
</code></pre>


<p>编译安装：  </p>


<pre><code>$ tar xvjf ctags-better-php-parser.tar.bz2  
$ ./configure  
$ make  
$ sudo make install
</code></pre>


<p>3.安装 composer.phar  </p>


<pre><code>$ curl -s https://getcomposer.org/installer | php
</code></pre>


<p>4.修改vim配置<br>
在vim中添加如下配置：  </p>


<pre><code>au FileType php setlocal omnifunc=phpcomplete_extended#CompletePHP  
let g:phpcomplete_index_composer_command = 'composer.phar'
</code></pre>


<p>5.开始使用<br>
进入Symfony项目的根目录，执行命令生成tags文件：</p>


<pre><code>$ ctags -R --fields=+aimS --languages=php
</code></pre>


<p>然后使用vim打开该tags文件，根据提示创建索引文件。完成之后索引文件会创建在 .phpcomplete_extended 目录中。下次在项目的根目录下打开vim，如果提示 “Index Loaded.”则表示配置成功了。接下来编写代码时就会有补全提示以及use语句的自动补全了。</p>


<p><strong>注意：</strong>在使用该插件时需要把自动切换目录功能给禁用掉，添加设置： set autochdir! 。否则会出现无法加载索引，从而补全不了。这个问题在文档中没说，我也是折腾了好久才发现的。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux下VNC使用]]></title>
    <link href="http://www.xefan.com/archives/84045.html"/>
    <updated>2014-03-01T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84045-Linux下VNC使用</id>
    <content type="html"><![CDATA[<h3>安装</h3>


<p>VNC (Virtual Network Computer)是虚拟网络计算机的缩写。VNC 是一款优秀的远程控制工具软件。<br>
VNC程序有多个软件包可选择，例如执行以下命令进行安装：</p>


<pre><code>$ sudo apt-get install vnc4server
$ sudo pacman -S tigervnc
</code></pre>


<h3>启动服务器程序</h3>


<p>修改$HOME/.vnc/xstartup配置文件，我是用的xfce，配置如下：</p>


<pre><code>#!/bin/sh

# Uncomment the following two lines for normal desktop:
# unset SESSION_MANAGER
# exec /etc/X11/xinit/xinitrc

[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup
[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources
xsetroot -solid grey
vncconfig -iconic &amp;
startxfce4 &amp;
</code></pre>


<p>然后运行服务程序，首次运行需要先设置密码：</p>


<pre><code>$ vncserver
</code></pre>


<h3>启动客户端程序</h3>


<p>执行如下命令链接vnc服务：</p>


<pre><code>$ vncviewer &lt;host&gt;:&lt;DISPLAY&gt;
</code></pre>


<p>例如要链接到10.0.0.101的1号DISPLAY，则是：</p>


<pre><code>$ vncviewer 10.0.0.101:1
</code></pre>


<p>然后根据提示输入密码即可。</p>


<h3>退出程序</h3>


<p>如果要退出客户端程序，直接将程序窗口关闭即可。<br>
如果要退出服务端程序，则在服务端执行命令：  </p>


<pre><code>$ vncserver -kill :1
</code></pre>

]]></content>
  </entry>
  
</feed>
