<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 资源分享 | 龍昌博客]]></title>
  <link href="http://www.xefan.com/categories/资源分享/atom.xml" rel="self"/>
  <link href="http://www.xefan.com/"/>
  <updated>2016-03-26T11:27:45+08:00</updated>
  <id>http://www.xefan.com/</id>
  <author>
    <name><![CDATA[龍昌]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Xcode文档离线安装]]></title>
    <link href="http://www.xefan.com/archives/84158.html"/>
    <updated>2016-01-03T16:52:11+08:00</updated>
    <id>http://www.xefan.com/archives/84158-Xcode文档离线安装</id>
    <content type="html"><![CDATA[<p>在 Xcode 中下载安装文档速度太慢了，不得已只得自行下载，然后再手动安装。</p>

<ol>
<li>首先在 <a href="https://developer.apple.com/library/downloads/docset-index.dvtdownloadableindex">https://developer.apple.com/library/downloads/docset-index.dvtdownloadableindex</a> 找到需要下载的文档的下载地址。</li>
</ol>


<p>这里我需要下载的是 iOS 9.2 的文档，内容如下：</p>

<p>&#8220;`</p>

<!-- START iOS doc set -->


<p><dict>
  <key>fileSize</key>
  <integer>1071665431</integer>
  <key>identifier</key>
  <string>com.apple.adc.documentation.iOS</string>
  <key>name</key>
  <string>iOS 9.2 Documentation</string>
  <key>source</key>
  <string><a href="https://devimages.apple.com.edgekey.net/docsets/20151208/031-43202-A.dmg">https://devimages.apple.com.edgekey.net/docsets/20151208/031-43202-A.dmg</a></string>
  <key>userInfo</key>
  <dict>
    <key>ActivationPredicate</key>
    <string>$XCODE_VERSION &gt;= &lsquo;7.2&rsquo;</string>
    <key>Category</key>
    <string>Documentation</string>
    <key>IconType</key>
    <string>IDEDownloadablesTypeDocSet</string>
    <key>InstallPrefix</key>
    <string>$(HOME)/Library/Developer/Shared/Documentation/DocSets</string>
    <key>InstalledIfAllReceiptsArePresentOrNewer</key>
    <dict>
      <key>com.apple.pkg.7.0.iOSDocset</key>
      <string>10.9.0.0.1.1449203766</string>
    </dict>
    <key>RequiresADCAuthentication</key>
    <false/>
    <key>Summary</key>
    <string>My description of content</string>
  </dict>
  <key>version</key>
  <string>92.7</string>
</dict></p>

<!-- END iOS doc set -->


<p>&#8220;`</p>

<p>下载地址为： <a href="https://devimages.apple.com.edgekey.net/docsets/20151208/031-43202-A.dmg">https://devimages.apple.com.edgekey.net/docsets/20151208/031-43202-A.dmg</a></p>

<p>如果觉得官网下载速度太慢了，也可以从我的百度网盘下载： <a href="http://pan.baidu.com/s/1pKsmkY3">http://pan.baidu.com/s/1pKsmkY3</a> 。下载完成之后自行进行文件合并、md5校验。</p>

<ol>
<li>将下载的 dmg 文件移动到 <code>~/Library/Caches/com.apple.dt.Xcode/Downloads/</code> 目录下（如果目录不存在，自行创建），
并重命名为 <code>&lt;identifier&gt;-&lt;version&gt;.dmg</code> 这样的形式，在这里为： <code>com.apple.adc.documentation.iOS-92.7.dmg</code></li>
</ol>


<p>然后转到文档所在目录： <code>~/Library/Developer/Shared/Documentation/DocSets</code>，如果对应的文档文件已存在则删除。
<code>rm -rf com.apple.adc.documentation.iOS.docset</code></p>

<ol>
<li>打开 Xcode ，点击下载对应的文档。此时应该会跳过下载步骤而直接进行安装。</li>
</ol>


<p><img src="/wp-content/uploads/2016/01/03/xcode1.png" alt="Xcode" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用VIM进行PHP远程调试]]></title>
    <link href="http://www.xefan.com/archives/84136.html"/>
    <updated>2014-11-19T20:00:30+08:00</updated>
    <id>http://www.xefan.com/archives/84136-使用VIM进行PHP远程调试</id>
    <content type="html"><![CDATA[<p>最近在写 PHP 时感觉它的调试不是很方便，基本都是用的 <code>var_dump</code> 将信息输出到页面上进行调试。最终实现是受不了这种方式，就找了一下看看有没有什么简便的方法。
于是就找到了 <code>vdebug</code> 这个 vim 插件，使用它可以方便的进行远程调试。</p>

<p>根据 <code>vdebug</code> 的介绍，说是它可以用来调试基于 DBGP 协议的程序，比如： PHP、Python、Ruby等。
可能只是 DBGP 协议在 PHP 中用得比较多吧，因此看到的大部分介绍都是说的 PHP 调试。
关于 DBGP 协议的详细介绍可参考： <a href="http://xdebug.org/docs-dbgp.php">http://xdebug.org/docs-dbgp.php</a></p>

<p><strong>使用方法：</strong></p>

<p>首先是在 vim 中安装这个插件，下载地址： <a href="https://github.com/joonty/vdebug">https://github.com/joonty/vdebug</a></p>

<p>由于它的配置信息都写死在代码中的，因此我就 fork 了一份进行自定义的修改，如快捷键设置、远程主机名和端口号。</p>

<p>然后是安装 PHP 的 Xdebug 扩展，并配置一些参数信息。在 <code>php.ini</code> 配置文件中添加如下内容：</p>

<pre><code>xdebug.remote_enable=on
xdebug.remote_handler=dbgp
xdebug.remote_host=127.0.0.1
xdebug.remote_port=9010
</code></pre>

<p>注意：这里的主机名和端口号要与 <code>vdebug</code> 中的一致。</p>

<p>接着使用 vim 打开一个 php 文件，按 <code>&lt;F5&gt;</code> 键启动该插件进行调试。然后在浏览器中访问该 php 程序，
并加上 <code>XDEBUG_SESSION_START=1</code> 参数，如： <a href="http://127.0.0.1/test.php?XDEBUG_SESSION_START=1">http://127.0.0.1/test.php?XDEBUG_SESSION_START=1</a></p>

<p>现在就可以在 vim 中对 php 程序进行单步调试了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[配置rails的vim环境]]></title>
    <link href="http://www.xefan.com/archives/84134.html"/>
    <updated>2014-11-08T16:02:58+08:00</updated>
    <id>http://www.xefan.com/archives/84134-配置rails的vim环境</id>
    <content type="html"><![CDATA[<p>今天分享一款 vim 的 rails 插件： <code>vim-rails</code> 。</p>

<p>使用该插件可以方便的在多个文件之间进行跳转。如在控制器的 action 上按 <code>gf</code> 键会自动跳转到对应的视图文件。</p>

<p>也可以使用 <code>:Emodel</code>, <code>:Eview</code>, <code>:Econtroller</code>, 命令在模型、视图以及控制器之间进行跳转。</p>

<p>该插件还提供了对 rails 的一些关键字的高亮。</p>

<p>并且还可以直接在 vim 中使用 <code>:Rails</code> 命令。</p>

<p>同时还有 <code>vim-rake</code> 和 <code>vim-bundler</code> 两个插件提供了 <code>rake</code> 和 <code>bundle</code> 的 vim 命令接口。</p>

<p>如果是用的 vundle 进行插件管理的话，可以直接在 .vimrc 配置中添加如下内容即可：</p>

<pre><code>Bundle 'tpope/vim-rails'
Bundle 'tpope/vim-rake'
Bundle 'tpope/vim-bundler'
</code></pre>

<p>然后再在vim执行命令 :BundleInstall 即可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[配置elixir的vim环境]]></title>
    <link href="http://www.xefan.com/archives/84132.html"/>
    <updated>2014-10-29T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84132-配置elixir的vim环境</id>
    <content type="html"><![CDATA[<p>elixir是建立在Erlang虚拟机之上的一种函数式编程语言。下面介绍elixir的两个vim插件。</p>


<p>首先是语法高亮支持： https://github.com/elixir-lang/vim-elixir</p>


<p>其次是snippets支持： https://github.com/carlosgaldino/elixir-snippets
这个需要先安装 snipMate 插件。</p>


<p>如果也是用的 vundle 进行插件管理的话，可以直接在 .vimrc 配置中添加如下内容即可：</p>


<pre><code>Bundle 'elixir-lang/vim-elixir'
Bundle 'carlosgaldino/elixir-snippets'

au BufNewFile,BufRead *.exs set ft=elixir
</code></pre>




<p>然后再在vim执行命令 :BundleInstall 即可。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[配置coffeescript的vim环境]]></title>
    <link href="http://www.xefan.com/archives/84130.html"/>
    <updated>2014-10-24T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84130-配置coffeescript的vim环境</id>
    <content type="html"><![CDATA[<p>coffeescript是构建在javascript基础上一门语言，它在运行时会编译在javascript。下面介绍vim用来开发coffeescript的两个插件。</p>


<p>首先是语法高亮支持： https://github.com/kchmck/vim-coffee-script</p>


<p>其次是snippets支持： https://github.com/carlosvillu/coffeScript-VIM-Snippets
这个需要先安装 snipMate 插件。</p>


<p>如果也是用的 vundle 进行插件管理的话，可以直接在 .vimrc 配置中添加如下内容即可：</p>


<pre><code>Bundle 'kchmck/vim-coffee-script'
Bundle 'carlosvillu/coffeScript-VIM-Snippets'

au BufNewFile,BufRead *.coffee set ft=coffee
</code></pre>

]]></content>
  </entry>
  
</feed>
