<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Arch | 龍昌博客]]></title>
  <link href="http://www.xefan.com/tags/Arch/atom.xml" rel="self"/>
  <link href="http://www.xefan.com/"/>
  <updated>2016-01-03T17:21:43+08:00</updated>
  <id>http://www.xefan.com/</id>
  <author>
    <name><![CDATA[龍昌]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Arch Linux 2012.12.01安装方法]]></title>
    <link href="http://www.xefan.com/archives/83809.html"/>
    <updated>2013-01-03T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83809-Arch Linux 2012.12.01安装方法</id>
    <content type="html"><![CDATA[<p>自从上次我的Arch系统崩溃之后我就改用其它系统了，距离现在已有小半年了。突然发现Arch又更新了，于是下下来体验一下。<br/>
在新版的ArchLinux中已经不在使用AIF(Arch Installation Framwork)了，而是使用新的脚本工具(Arch Install Scripts)，<a href="https://github.com/falconindy/arch-install-scripts">https://github.com/falconindy/arch-install-scripts</a></p>

<p>新版的安装过程是通过网络安装，因此整个过程需要联网才行。</p>

<p>1、首先为Arch分配一个分区，然后挂载到/mnt目录。如果使用多个分区，还需要创建它们并正确挂载（/mnt/boot, /mnt/home, &hellip;），这样genfstab才能自动检测到它们。</p>

<p>2、安装基本系统<br/>
先编辑/etc/pacman.d/mirrorlist选择首先镜像。<br/>
然后使用pacstrap脚本安装基本系统。<br/>
<code># pacstrap /mnt base base-devel</code></p>

<p>3、安装引导器<br/>
安装一个Bootloader，Grub或者Syslinux。<br/>
(1)安装GRUB:<br/>
如果是BIOS用户执行命令：<br/>
<code># pacstrap /mnt grub-bios</code><br/>
如果是EFI用户执行命令：<br/>
<code># pacstrap /mnt grub-efi-x86_64</code></p>

<p>(2)安装Syslinux：<br/>
<code>#pacstrap /mnt syslinux</code></p>

<p>4、配置系统<br/>
(1)生成fstab文件<br/>
<code># genfstab -p /mnt &amp;gt;&amp;gt; /mnt/etc/fstab</code></p>

<p>(2)chroot到新安装的系统中去<br/>
<code># arch-chroot /mnt</code></p>

<p>(3)进行一些系统配置<br/>
设置主机名：修改/etc/hostname文件，将主机名写入里面。<br/>
设置时区： cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br/>
设置locale： 修改/etc/locale.gen文件，然后再执行命令locale-gen<br/>
创建一个初始的RAM disk： mkinitcpio -p linux<br/>
设置root用户的密码： passwd root<br/>
配置引导器，在我的电脑上是依次执行如下命令，这个请结合自己的情况进行设置：<br/>
<code># grub-install --no-floppy /dev/sda</code><br/>
<code># grub-mkconfig -o /boot/grub/grub.cfg</code></p>

<p>其余的根据自己的需要再进行设置。</p>

<p>5、重启进入新系统<br/>
先退出chroot，然后卸载之前挂载在/mnt的分区。<br/>
<code># umount /mnt</code><br/>
然后重启进入新系统并以root用户登陆。<br/>
现在一个基本的Arch系统就已经安装好了，接下来可以根据自己的需要来安装相应的软件。</p>

<p>6、安装应用软件<br/>
Arch系统刚安装好后发现居然连ifconfig命令都没有，可以使用如下命令安装：<br/>
<code># pacman -S net-tools dnsutils inetutils iproute2</code></p>

<p>安装Yaourt<br/>
在/etc/pacman.conf中添加以下内容：<br/>
<code>
[archlinuxfr]
Server = http://repo.archlinux.fr/$arch
</code></p>

<p>然后再执行命令: pacman -Syu yaourt</p>

<p>安装Xorg：<br/>
<code># pacman -S xorg-server xorg-xinit xorg-utils xorg-server-utils</code><br/>
安装显示驱动(根据自己的情况选择安装相应的驱动)：<br/>
<code># pacman -S xf86-video-fbdev</code><br/>
安装evdev，支持大部分即插即用设备<br/>
<code># pacman -S xf86-input-evdev</code><br/>
安装默认的测试环境：<br/>
<code># pacman -S xorg-twm xorg-xclock xterm</code><br/>
然后启动X会话，如果能够看到一个终端和一个时钟就表示已经安装成功了：<br/>
<code>$ startx</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[u-Boot使用nfs根文件系统]]></title>
    <link href="http://www.xefan.com/archives/83710.html"/>
    <updated>2012-03-16T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83710-u-Boot使用nfs根文件系统</id>
    <content type="html"><![CDATA[<p>使用nfs根文件系统对于开发非常方便，不用每次编译好后又要烧写到开发板上。</p>

<p>设置方法：<br/>
打开开发板电源后进入u-boot，然后选择“[0] Set the boot parameters”。<br/>
再选择“[1] Set NFS boot parameter ”。<br/>
然后依次输入PC的IP、开发板的IP、子网掩码、NFS目录。<br/>
例子如下：<br/>
Enter the PC IP address:(xxx.xxx.xxx.xxx)<br/>
10.10.10.2<br/>
Enter the SKY2440/TQ2440 IP address:(xxx.xxx.xxx.xxx)<br/>
10.10.10.3<br/>
Enter the Mask IP address:(xxx.xxx.xxx.xxx)<br/>
255.255.255.0<br/>
Enter NFS directory:(eg: /opt/EmbedSky/root_nfs)<br/>
/opt/EmbedSky/root<br/>
bootargs: console=ttySAC0 root=/dev/nfs nfsroot=10.10.10.2:/opt/EmbedSky/root ip=10.10.10.3:10.10.10.2:10.10.10.3:255.255.255.0:SKY2440.embedsky.net:eth0:off</p>

<p>输入好后再选择“[s] Save the parameters to Nand Flash”保存设置即可。</p>

<p>以上是一般情况，下面再说说我的特殊情况。</p>

<p>=====================分割线===============================</p>

<p>我在PC上安装的是ArchLinux，按照以上方法运行时挂载失败，提示Root-NFS: Server returned error -93 while mounting /opt/EmbedSky/root
－93的意思好像是没有这个协议。</p>

<p>于是我又在虚拟机里安装了ubuntu，再尝试以上方法结果却成功了。<br/>
最后我查了资料，原因好像是u-boot使用的nfs3，而ArchLinux的官网上说nfs3太老了所以Arch用的是nfs4。因此就出现了这个问题。<br/>
解决方法：添加一个&#8221;,v3&#8221;参数。如：<br/>
Enter NFS directory:(eg: /opt/EmbedSky/root_nfs)<br/>
/opt/EmbedSky/root<span style="color: #ff0000;">,v3</span><br/>
bootargs: console=ttySAC0 root=/dev/nfs nfsroot=10.10.10.2:/opt/EmbedSky/root<span style="color: #ff0000;">,v3</span> ip=10.10.10.3:10.10.10.2:10.10.10.3:255.255.255.0:SKY2440.embedsky.net:eth0:off</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux NFS服务器设置]]></title>
    <link href="http://www.xefan.com/archives/83661.html"/>
    <updated>2011-11-23T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83661-Linux NFS服务器设置</id>
    <content type="html"><![CDATA[<p>我用的是Arch Linux，不过不同的版本应该都差不多吧。</p>

<p>1、首先安装nfs-utils软件包。</p>

<p>2、修改/ect/exports文件，添加分享，格式为：<br/>
<em>路径 允许的主机(属性)</em><br/>
如：<em>/opt/arm 192.168.1.*(ro,sync,no_root_squash)</em></p>

<p>3、启动nfs服务。<br/>
执行命令：/etc/rc.d/nfs-server start</p>

<p>现在可以在其他主机上使用mount命令来挂载该主机的分享目录，命令格式：<em>mount -t nfs -o nolock 主机:/路径 挂载点 </em><br/>
如：<em>mount -t nfs -o nolock 192.168.1.100:/opt/arm /mnt/nfs </em></p>

<p>如果挂载时出现提示：mount.nfs: access denied by server while mounting，说明请求被拒绝了。<br/>
修改/ect/hosts.allow文件（没有请自行创建），添加允许，格式<br/>
portmap: 主机/网段 :allow<br/>
如：<br/>
portmap: 192.168.1.100 :allow<br/>
portmap: 192.168.1.0/255.255.255.0 :allow</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arch+xfce自动挂载]]></title>
    <link href="http://www.xefan.com/archives/83656.html"/>
    <updated>2011-11-07T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83656-Arch+xfce自动挂载</id>
    <content type="html"><![CDATA[<p>我的是Arch Linux的系统，用的xfce4的桌面。</p>

<p>网上的方法是通过编写rules文件用udev来自动挂载，不过rules太复杂了，看了半天没看懂。</p>

<p>我用的方法是安装gvfs，命令：
<code>#pacman -S gvfs</code></p>

<p>然后重启一下系统，现在就可以自动挂载移动硬盘、U盘、光盘了，并且之前一直隐藏的“回收站”也显示了。</p>

<p><a href="https://wiki.archlinux.org/index.php/Xfce#Removable_Devices">https://wiki.archlinux.org/index.php/Xfce#Removable_Devices</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arch Linux安装xfce和slim]]></title>
    <link href="http://www.xefan.com/archives/83637.html"/>
    <updated>2011-10-16T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83637-Arch Linux安装xfce和slim</id>
    <content type="html"><![CDATA[<p>这几天终于把Arch Linux + Xfce + slim配置好了，做个笔记备忘。</p>

<h1>安装Xfce</h1>


<p><a href="https://wiki.archlinux.org/index.php/Xfce_">https://wiki.archlinux.org/index.php/Xfce_</a>(简体中文)</p>

<p><strong>安装准备</strong></p>

<p>请在安装与使用xfce前确认已经安装有xorg以及hal。</p>

<p><code># pacman -S xorg hal</code></p>

<p>默认安装的archlinux是不包含xorg以及hal的。如果不安装两者，将造成xfce无法启动。HAL 已经被诸如udev,udisks,upower这些程序替代 。</p>

<p><strong>安装XFCE系统(Xfce 4.8)</strong></p>

<p><code># pacman -S xfce4 xfce4-goodies</code><br/>
<code># pacman -S $(pacman -Sgq xfce4-goodies | grep -v xfce4-xfapplet-plugin)</code></p>

<p>默认安装的xfce4，首次启动出现的小提示窗口里面是没有任何东西的。如果你想看到刚启动时候的技巧和小提示，那么就需要安装fortune-mod</p>

<p><code># pacman -S fortune-mod</code></p>

<p>安装好xfce4之后可能会发现xfce4-mixer通过ALSA并不能控制音量，需要安装gstreamer0.10-base-plugins：</p>

<p><code># pacman -S gstreamer0.10-base-plugins</code></p>

<p>对于笔记本用户，Xfce4-mixer如果不能同时控制外放与耳机，请尝试安装全部Plugins：</p>

<p><code># pacman -S gstreamer0.10-plugins</code></p>

<p><strong>安装和配置Daemons</strong></p>

<p><strong>安装dbus：</strong></p>

<p><code># pacman -S dbus</code></p>

<p>需要在开机的时候自动运行，应该将dbus添加到/etc/rc.conf文件中的DAEMONS：
DAEMONS=(syslog-ng dbus network crond)</p>

<p>如果不想重启开始dbus服务： <code># /etc/rc.d/dbus start</code></p>

<p>安装gamin (fam已经是过时的东西)，它会在后台自动运行检查文件改动反应给桌面，并且不需要添加到Daemons。</p>

<p><code># pacman -S gamin</code></p>

<h1>运行XFCE</h1>


<p><strong>手动启动</strong></p>

<p>你只需要运行： <code>$ startxfce4</code></p>

<p>从终端启动，例如使用xinit/startx 需要配置Xinitrc (简体中文)。
如果还没有~/.xinitrc 文件，系统里有一份实例文件供参考：<code>$ cp /etc/skel/.xinitrc ~/.xinitrc</code></p>

<p>在最后添加（因为权限的问题推荐在启动xfce之前添加ck-launch-session dbus-launch启）：
<em>exec ck-launch-session dbus-launch &ndash;exit-with-session startxfce4</em></p>

<p><strong>在XFCE中关机和重启</strong></p>

<p>在/etc/sudoers文件末尾添加如下一行：
<em>%users ALL=(root) NOPASSWD: /usr/lib/xfce4/session/xfsm-shutdown-helper</em></p>

<p><code># gpasswd -a 你的用户名 users</code></p>

<p><strong>声音</strong><br/>
<strong>安装ALSA</strong>
<a href="https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture_">https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture_</a>(简体中文)</p>

<p>要求有本地化的ALSA程序和管理</p>

<p><code># pacman -S alsa-lib alsa-utils</code><br/>
<code># pacman -S alsa-oss</code></p>

<p>所有ALSA程序都很可能需要依赖alsa-lib。</p>

<p><strong>使用ALSA驱动如何让xfce4-mixer来控制音量</strong></p>

<p>新版的xfce4-mixer使用了gstreamer作为后端，这样就不用直接与驱动交流，更加统一。与驱动打交道的工作交给了gstreamer。因此如果你xfce4-mixer无法正常工作，就需要配置好gstreamer。首先当然你得安装xfce4-mixer。</p>

<p><code>pacman -S xfce4-mixer gstreamer0.10-base-plugins</code></p>

<p>你需要至少安装gstreamer0.10-good-plugins,考虑安装gstreamer0.10-bad-plugins</p>

<p><code>pacman -S gstreamer0.10-good-plugins gstreamer0.10-bad-plugins</code></p>

<p>然后删除面板上的mixer插件，然后重新添加一次，或者先登出然后再登录一次，对gstreamer做更改后必须这样做才能让操作生效。</p>

<h1>安装SLiM</h1>


<p><a href="https://wiki.archlinux.org/index.php/SLiM_">https://wiki.archlinux.org/index.php/SLiM_</a>(简体中文)</p>

<p><strong>介绍</strong></p>

<p>SLiM是Simple Login Manager（简单登录管理器）的缩写。SLiM是简单、轻量级和容易配置的，相对较易在低端和高端的系统中使用。对于那些希望寻找一个不依赖于GNOME或者KDE，可以在Xfce、Openbox、Fluxbox等环境下使用的登录管理器的人来说，SLiM也是非常合适的。</p>

<p><strong>安装</strong></p>

<p>可以在extra软件仓库中找到SLiM： <code># pacman -S slim</code></p>

<p>同时还可以安装主题包： <code># pacman -S slim-themes archlinux-themes-slim</code></p>

<p><strong>配置</strong></p>

<p>启用SLiM</p>

<p>单用户环境<br/>
要将SLiM配置为加载某个特定的环境，只需编辑~/.xinitrc如下：<br/>
将[session-command]替换为适当的会话命令。例如：<br/>
要启动Xfce:<br/>
<em>exec ck-launch-session dbus-launch &ndash;exit-with-session startxfce4</em></p>

<p>打开 /etc/rc.conf。<br/>
<code># vi /etc/rc.conf</code></p>

<p>添加一个服务slim<br/>
<em>DAEMONS=(syslogd klogd !pcmcia network netfs crond slim)</em></p>

<p>修改默认运行等级<br/>
1. 切换用户到root.<br/>
$ su<br/>
2. 编辑/etc/inittab：<br/>
<code># vi /etc/inittab</code><br/>
3. 找到如下这一行：<br/>
id:3:initdefault:<br/>
4. 为了启动X11需要把&#8217;3&#8217;修改成&#8217;5&#8217;：<br/>
id:5:initdefault:<br/>
5. 保存此文件并退出编辑器，下次启动时你选择的显示管理器就会运行了。</p>

<p>这样就差不多了，细节上的以后再慢慢琢磨。</p>
]]></content>
  </entry>
  
</feed>
