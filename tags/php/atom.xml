<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Php | 龍昌博客]]></title>
  <link href="http://www.xefan.com/tags/php/atom.xml" rel="self"/>
  <link href="http://www.xefan.com/"/>
  <updated>2015-05-14T23:08:46+08:00</updated>
  <id>http://www.xefan.com/</id>
  <author>
    <name><![CDATA[龍昌]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用VIM进行PHP远程调试]]></title>
    <link href="http://www.xefan.com/archives/84136.html"/>
    <updated>2014-11-19T20:00:30+08:00</updated>
    <id>http://www.xefan.com/archives/84136-使用VIM进行PHP远程调试</id>
    <content type="html"><![CDATA[<p>最近在写 PHP 时感觉它的调试不是很方便，基本都是用的 <code>var_dump</code> 将信息输出到页面上进行调试。最终实现是受不了这种方式，就找了一下看看有没有什么简便的方法。
于是就找到了 <code>vdebug</code> 这个 vim 插件，使用它可以方便的进行远程调试。</p>

<p>根据 <code>vdebug</code> 的介绍，说是它可以用来调试基于 DBGP 协议的程序，比如： PHP、Python、Ruby等。
可能只是 DBGP 协议在 PHP 中用得比较多吧，因此看到的大部分介绍都是说的 PHP 调试。
关于 DBGP 协议的详细介绍可参考： <a href="http://xdebug.org/docs-dbgp.php">http://xdebug.org/docs-dbgp.php</a></p>

<p><strong>使用方法：</strong></p>

<p>首先是在 vim 中安装这个插件，下载地址： <a href="https://github.com/joonty/vdebug">https://github.com/joonty/vdebug</a></p>

<p>由于它的配置信息都写死在代码中的，因此我就 fork 了一份进行自定义的修改，如快捷键设置、远程主机名和端口号。</p>

<p>然后是安装 PHP 的 Xdebug 扩展，并配置一些参数信息。在 <code>php.ini</code> 配置文件中添加如下内容：</p>

<pre><code>xdebug.remote_enable=on
xdebug.remote_handler=dbgp
xdebug.remote_host=127.0.0.1
xdebug.remote_port=9010
</code></pre>

<p>注意：这里的主机名和端口号要与 <code>vdebug</code> 中的一致。</p>

<p>接着使用 vim 打开一个 php 文件，按 <code>&lt;F5&gt;</code> 键启动该插件进行调试。然后在浏览器中访问该 php 程序，
并加上 <code>XDEBUG_SESSION_START=1</code> 参数，如： <a href="http://127.0.0.1/test.php?XDEBUG_SESSION_START=1">http://127.0.0.1/test.php?XDEBUG_SESSION_START=1</a></p>

<p>现在就可以在 vim 中对 php 程序进行单步调试了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nginx + Php + FastCGI配置]]></title>
    <link href="http://www.xefan.com/archives/84121.html"/>
    <updated>2014-08-01T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84121-nginx + php + FastCGI配置</id>
    <content type="html"><![CDATA[<p>最近在弄PHP，于是乎把配置过程作一个笔记以免忘了。</p>


<h2>PHP安装、配置</h2>


<p>我是通过源代码编译的形式进行安装的，基本步骤如下：</p>


<pre><code>$ tar xf php-5.5.12.tar.bz2
$ cd php-5.5.12
$ './configure'  '--prefix=/opt/myphp' '--with-mysql' '--enable-safe-mode' '--enable-ftp' '--enable-zip' '--with-jpeg-dir' '--with-bz2' '--with-png-dir' '--with-freetype-dir' '--with-iconv' '--with-libxml-dir' '--with-xmlrpc' '--with-zlib-dir' '--with-gd' '--enable-gd-native-ttf' '--with-curl' '--with-gettext' '--with-pear' '--enable-fpm' '--enable-fastcgi' '--with-ncurses' '--with-mcrypt' '--with-mhash' '--with-openssl' '--with-pcre-dir' '--enable-pdo' '--enable-phar' '--enable-json' '--enable-mbstring' '--with-pdo-mysql' '--with-pdo-sqlite' '--with-readline' '--enable-bcmath'
$ make
$ sudo make install
</code></pre>




<p>安装完成之后进入安装目录修改配置文件 lib/php.ini (没有则创建)，添加时区设置：</p>


<pre><code>date.timezone=Asia/Shanghai
</code></pre>




<p>然后运行PHP的FastCGI服务：</p>


<pre><code>./bin/php-cgi -b 9000
</code></pre>




<h2>nginx配置</h2>


<p>nginx可以直接从仓库进行安装：</p>


<pre><code>sudo pacman -S nginx
</code></pre>




<p>或者：</p>


<pre><code>sudo apt-get install nginx
</code></pre>




<p>安装完成之后修改配置，添加一条新的虚拟主机：</p>


<pre><code>server {
    listen 8000;
    server_name localhost;

    root /var/www;

    location / {
        index index.php;
    }

    location ~ \.php$ {
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;  
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include        fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  /var/www/$fastcgi_script_name;
    }

}
</code></pre>




<p>然后再创建文件 /var/www/index.php</p>


<pre><code>&lt;?php
  phpinfo();
?&gt;
</code></pre>




<p>现在通过浏览器访问 http://127.0.0.1:8000/ 应该就可以看到效果了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim的symfony2开发环境配置]]></title>
    <link href="http://www.xefan.com/archives/84114.html"/>
    <updated>2014-06-26T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/84114-vim的symfony2开发环境配置</id>
    <content type="html"><![CDATA[<h2>安装</h2>


<p>最近在用Symfony2框架进行开发，正所谓工欲善其事必先利其器。为了提高开发效率，因此将vim配置为symfony的IDE。</p>


<p>我安装的是phpcomplete-extended-symfony这款插件 https://github.com/m2mdas/phpcomplete-extended-symfony</p>


<p>它有些依赖在文档中没写清楚，我也是折腾了好久才搞定的，于是做个笔记记录一下。</p>


<p>我总共安装了以下插件：</p>


<ul>
<li>neocomplete.vim  </li>
<li>vimproc.vim  </li>
<li>unite.vim  </li>
<li>phpcomplete.vim  </li>
<li>phpcomplete-extended  </li>
<li>phpcomplete-extended-symfony  </li>
<li>vim-twig  </li>
</ul>


<p>我是使用的Vundle进行vim插件管理，因此在 .vimrc 配置中添加以下内容：</p>


<pre><code>Bundle 'Shougo/neocomplete.vim'
Bundle 'Shougo/vimproc.vim'
Bundle 'Shougo/unite.vim'
Bundle 'shawncplus/phpcomplete.vim'
Bundle 'm2mdas/phpcomplete-extended'
Bundle 'm2mdas/phpcomplete-extended-symfony'
Bundle 'evidens/vim-twig'
</code></pre>


<p>然后再执行BundleInstall命令进行下载安装。</p>


<p>注意：vim-twig插件不是必需的，安装它只是为了编写twig模板时能够高亮。  </p>


<h2>使用</h2>


<p>接下来说说使用流程。</p>


<p>1.vimproc需要编译<br>
进行vimproc的安装目录，执行make命令进行编译。详细内容请阅读它的README文件。</p>


<p>2.安装ctags工具<br>
由于当前的ctags工具不支持PHP的新特性，如命名空间、traits、interface，于是就需要给ctags打补丁。  </p>


<p>下载打过补丁的ctags源代码：  </p>


<pre><code>$ wget "https://github.com/shawncplus/phpcomplete.vim/blob/master/misc/ctags-better-php-parser.tar.bz2?raw=true" -O ctags-better-php-parser.tar.bz2
</code></pre>


<p>编译安装：  </p>


<pre><code>$ tar xvjf ctags-better-php-parser.tar.bz2  
$ ./configure  
$ make  
$ sudo make install
</code></pre>


<p>3.安装 composer.phar  </p>


<pre><code>$ curl -s https://getcomposer.org/installer | php
</code></pre>


<p>4.修改vim配置<br>
在vim中添加如下配置：  </p>


<pre><code>au FileType php setlocal omnifunc=phpcomplete_extended#CompletePHP  
let g:phpcomplete_index_composer_command = 'composer.phar'
</code></pre>


<p>5.开始使用<br>
进入Symfony项目的根目录，执行命令生成tags文件：</p>


<pre><code>$ ctags -R --fields=+aimS --languages=php
</code></pre>


<p>然后使用vim打开该tags文件，根据提示创建索引文件。完成之后索引文件会创建在 .phpcomplete_extended 目录中。下次在项目的根目录下打开vim，如果提示 “Index Loaded.”则表示配置成功了。接下来编写代码时就会有补全提示以及use语句的自动补全了。</p>


<p><strong>注意：</strong>在使用该插件时需要把自动切换目录功能给禁用掉，添加设置： set autochdir! 。否则会出现无法加载索引，从而补全不了。这个问题在文档中没说，我也是折腾了好久才发现的。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP导出Excel]]></title>
    <link href="http://www.xefan.com/archives/83562.html"/>
    <updated>2011-07-29T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83562-PHP导出Excel</id>
    <content type="html"><![CDATA[<p>PHPExcel是一个用PHP写的开源的相当强大的 MS Office Excel 文档生成类库。</p>

<p>下面给出一个例子，有编程基础应该可以根据这个例子举一反三。</p>

<p>首先，先下载PHPExcel（ <a href="http://www.phpexcel.net">http://www.phpexcel.net</a> ）。国外的网站速度比较慢的话可以到这里下载：<a href="http://u.115.com/file/clgk4q5t">http://u.115.com/file/clgk4q5t</a></p>

<p>下载解压后，将Classes目录里的内容上传到你的服务器上。然后新建一个文件saveas_excel.php，与Classes目录里的文件处于同一目录中。</p>

<p><strong>saveas_excel.php</strong>内容如下：</p>

<pre><code class="php">&lt;?

//设置PHPExcel类库的include path

//set_include_path('.'. PATH_SEPARATOR .

//                 'D:ZealPHP_LIBS' . PATH_SEPARATOR .

//                  get_include_path());

/**

* 以下是使用示例，对于以 //// 开头的行是不同的可选方式，请根据实际需要

* 打开对应行的注释。

* 如果使用 Excel5 ，输出的内容应该是GBK编码。

*/

require_once 'PHPExcel.php';

// uncomment

require_once 'PHPExcel/Writer/Excel5.php';     // 用于其他低版本xls

// or

////require_once 'PHPExcel/Writer/Excel2007.php'; // 用于 excel-2007 格式

// 创建一个处理对象实例

$objExcel = new PHPExcel();

// 创建文件格式写入对象实例, uncomment

$objWriter = new PHPExcel_Writer_Excel5($objExcel);     // 用于其他版本格式

// or

////$objWriter = new PHPExcel_Writer_Excel2007($objExcel); // 用于 2007 格式

////$objWriter-&gt;setOffice2003Compatibility(true);

//*************************************

//设置文档基本属性

$objProps = $objExcel-&gt;getProperties();

$objProps-&gt;setCreator("Zeal Li");

$objProps-&gt;setLastModifiedBy("Zeal Li");

$objProps-&gt;setTitle("Office XLS Test Document");

$objProps-&gt;setSubject("Office XLS Test Document, Demo");

$objProps-&gt;setDescription("Test document, generated by PHPExcel.");

$objProps-&gt;setKeywords("office excel PHPExcel");

$objProps-&gt;setCategory("Test");

//*************************************

//设置当前的sheet索引，用于后续的内容操作。

//一般只有在使用多个sheet的时候才需要显示调用。

//缺省情况下，PHPExcel会自动创建第一个sheet被设置SheetIndex=0

$objExcel-&gt;setActiveSheetIndex(0);

$objActSheet = $objExcel-&gt;getActiveSheet();

//设置当前活动sheet的名称

$objActSheet-&gt;setTitle('测试Sheet');

//*************************************

//设置单元格内容

//

//由PHPExcel根据传入内容自动判断单元格内容类型

$objActSheet-&gt;setCellValue('A1', '字符串内容');  // 字符串内容

$objActSheet-&gt;setCellValue('A2', 26);            // 数值

$objActSheet-&gt;setCellValue('A3', true);          // 布尔值

$objActSheet-&gt;setCellValue('A4', '=SUM(A2:A2)'); // 公式

//显式指定内容类型

$objActSheet-&gt;setCellValueExplicit('A5', '847475847857487584',

PHPExcel_Cell_DataType::TYPE_STRING);

//合并单元格

$objActSheet-&gt;mergeCells('B1:C22');

//分离单元格

//$objActSheet-&gt;unmergeCells('B1:C22');

//*************************************

//设置单元格样式

//

//设置宽度

$objActSheet-&gt;getColumnDimension('B')-&gt;setAutoSize(true);

$objActSheet-&gt;getColumnDimension('A')-&gt;setWidth(30);

$objStyleA5 = $objActSheet-&gt;getStyle('A5');

//设置单元格内容的数字格式。

//

//如果使用了 PHPExcel_Writer_Excel5 来生成内容的话，

//这里需要注意，在 PHPExcel_Style_NumberFormat 类的 const 变量定义的

//各种自定义格式化方式中，其它类型都可以正常使用，但当setFormatCode

//为 FORMAT_NUMBER 的时候，实际出来的效果被没有把格式设置为"0"。需要

//修改 PHPExcel_Writer_Excel5_Format 类源代码中的 getXf($style) 方法，

//在 if ($this-&gt;_BIFF_version == 0×0500) { （第363行附近）前面增加一

//行代码:

//if($ifmt === '0') $ifmt = 1;

//

//设置格式为PHPExcel_Style_NumberFormat::FORMAT_NUMBER，避免某些大数字

//被使用科学记数方式显示，配合下面的 setAutoSize 方法可以让每一行的内容

//都按原始内容全部显示出来。

$objStyleA5

-&gt;getNumberFormat()

-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_NUMBER);

//设置字体

$objFontA5 = $objStyleA5-&gt;getFont();

$objFontA5-&gt;setName('Courier New');

$objFontA5-&gt;setSize(10);

$objFontA5-&gt;setBold(true);

$objFontA5-&gt;setUnderline(PHPExcel_Style_Font::UNDERLINE_SINGLE);

$objFontA5-&gt;getColor()-&gt;setARGB('FF999999');

//设置对齐方式

$objAlignA5 = $objStyleA5-&gt;getAlignment();

$objAlignA5-&gt;setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_RIGHT);

$objAlignA5-&gt;setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

//设置边框

$objBorderA5 = $objStyleA5-&gt;getBorders();

$objBorderA5-&gt;getTop()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);

$objBorderA5-&gt;getTop()-&gt;getColor()-&gt;setARGB('FFFF0000'); // color

$objBorderA5-&gt;getBottom()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);

$objBorderA5-&gt;getLeft()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);

$objBorderA5-&gt;getRight()-&gt;setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);

//设置填充颜色

$objFillA5 = $objStyleA5-&gt;getFill();

$objFillA5-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID);

$objFillA5-&gt;getStartColor()-&gt;setARGB('FFEEEEEE');

//从指定的单元格复制样式信息.

$objActSheet-&gt;duplicateStyle($objStyleA5, 'B1:C22');

//*************************************

//添加图片

$objDrawing = new PHPExcel_Worksheet_Drawing();

$objDrawing-&gt;setName('ZealImg');

$objDrawing-&gt;setDescription('Image inserted by Zeal');

$objDrawing-&gt;setPath('./zeali.net.logo.gif');

$objDrawing-&gt;setHeight(36);

$objDrawing-&gt;setCoordinates('C23');

$objDrawing-&gt;setOffsetX(10);

$objDrawing-&gt;setRotation(15);

$objDrawing-&gt;getShadow()-&gt;setVisible(true);

$objDrawing-&gt;getShadow()-&gt;setDirection(36);

$objDrawing-&gt;setWorksheet($objActSheet);

//添加一个新的worksheet

$objExcel-&gt;createSheet();

$objExcel-&gt;getSheet(1)-&gt;setTitle('测试2');

////保护单元格

$objExcel-&gt;getSheet(1)-&gt;getProtection()-&gt;setSheet(true);

$objExcel-&gt;getSheet(1)-&gt;protectCells('A1:C22', 'PHPExcel');

//*************************************

//输出内容

//

$outputFileName = time().".xls";

////导出到文件，保存到服务器上，需要自行下载

//try{

//    $objWriter-&gt;save($outputFileName);

//    echo "导出到".$outputFileName."成功！";

//}

//catch(Exception $e){

//    echo "&lt;p&gt;&lt;b&gt;导出失败！".$outputFileName."可能正在被使用！&lt;/b&gt;&lt;/p&gt;";

//    //echo $e;

//}

//or

////导出到浏览器，自动下载到本地

try{

header("Content-Type: application/force-download");

header("Content-Type: application/octet-stream");

header("Content-Type: application/download");

header('Content-Disposition:inline;filename="'.$outputFileName.'"');

header("Content-Transfer-Encoding: binary");

header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");

header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");

header("Cache-Control: must-revalidate, post-check=0, pre-check=0");

header("Pragma: no-cache");

$objWriter-&gt;save('php://output');

}

catch(Exception $e){

echo "&lt;p&gt;&lt;b&gt;导出失败！&lt;/b&gt;&lt;/p&gt;";

}

?&gt;
</code></pre>

<p>如果有不懂的请自己看DocumentationAPI目录中的文档。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP对XML的读写实例]]></title>
    <link href="http://www.xefan.com/archives/83559.html"/>
    <updated>2011-07-24T00:00:00+08:00</updated>
    <id>http://www.xefan.com/archives/83559-PHP对XML的读写实例</id>
    <content type="html"><![CDATA[<p>新建两个文件，文件名分别为：photo_list.php、photo_list.xml，放在同一目录下。</p>

<p><strong>photo_list.xml</strong>文件内容：</p>

<pre><code class="xml">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;photos&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_01.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_02.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_03.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_04.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_05.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_06.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_07.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_08.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_09.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_10.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_11.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_12.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_13.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_14.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_15.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_16.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;flashmo_175_17.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;
精美相框
&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;1300513578.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;精美相框&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;1300513595.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;精美相框&lt;/description&gt;
&lt;/photo&gt;
&lt;photo&gt;
&lt;filename&gt;1300514082.jpg&lt;/filename&gt;
&lt;title&gt;精美相框&lt;/title&gt;
&lt;description&gt;精美相框&lt;/description&gt;
&lt;/photo&gt;
&lt;/photos&gt;
</code></pre>

<p><strong>photo_list.php</strong>文件内容：</p>

<pre><code class="php">&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;XML Library&lt;/title&gt;
&lt;/head&gt;
&lt;?php
$xml = new DOMDocument('1.0');
$xml-&gt;load( 'photo_list.xml' );
switch($_GET['action']){
//添加内容
case 'add':
$filename2 = time().'.jpg';
$root=$xml-&gt;getElementsByTagName('photos')-&gt;item(0);
//创建结点
$Nphoto=$xml-&gt;createElement('photo');
$Nfilename=$xml-&gt;createElement('filename');
$Ntitle=$xml-&gt;createElement('title');
$Ndescription=$xml-&gt;createElement('description');
//各结点的值
$Tfilename=$xml-&gt;createTextNode($filename2);
$Ttitle=$xml-&gt;createTextNode('精美相框');
$Tdescription=$xml-&gt;createTextNode('精美相框');
//值插入结点
$Nfilename-&gt;appendChild($Tfilename);
$Ntitle-&gt;appendChild($Ttitle);
$Ndescription-&gt;appendChild($Tdescription);
//保存结点
$Nphoto-&gt;appendChild($Nfilename);
$Nphoto-&gt;appendChild($Ntitle);
$Nphoto-&gt;appendChild($Ndescription);
$root-&gt;appendChild($Nphoto);
$xml-&gt;save('photo_list.xml');
echo "添加成功！";
exit();
//删除内容
case 'del':
$filename = $_GET['file'];
$root=$xml-&gt;getElementsByTagName('photos')-&gt;item(0);
$N_photo=$root-&gt;getElementsByTagName('photo');
foreach($N_photo as $Nphoto){
$N_filename=$Nphoto-&gt;getElementsByTagName('filename');
if($N_filename-&gt;item(0)-&gt;firstChild-&gt;nodeValue==$filename){
$root-&gt;removeChild($Nphoto);
$xml-&gt;save('photo_list.xml');
echo "删除成功！";
}
}
exit();
//列出内容
default:
}

$description = array();
$filename  = array();
$title  = array();
$count = 0;
$XMLGroups = $xml-&gt;getElementsByTagName('photos')-&gt;item(0);
foreach($XMLGroups-&gt;getElementsByTagName('photo') as $groupNode) {
$description[$count] = $groupNode-&gt;getElementsByTagName('description')-&gt;item(0)-&gt;firstChild-&gt;nodeValue;
$filename[$count]  = $groupNode-&gt;getElementsByTagName('filename')-&gt;item(0)-&gt;firstChild-&gt;nodeValue;
$title[$count]  = $groupNode-&gt;getElementsByTagName('title')-&gt;item(0)-&gt;firstChild-&gt;nodeValue;
$count++;
}

?&gt;

&lt;body&gt;
&lt;br /&gt;

&lt;?
$Length=count($filename);
$i=0;
while($i&lt;$Length){
echo '&lt;div style="border:1px; border-style:dashed; border-color:#000000; width:820px;"&gt;';
echo "文件名：$filename[$i]&lt;br&gt;标题：$title[$i]&lt;br&gt;描述：$description[$i]&lt;br&gt;";
echo '&lt;/div&gt;&lt;br&gt;';
$i++;
}
?&gt;

&lt;br /&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
]]></content>
  </entry>
  
</feed>
